{
    "objects": [
        {
            "jobObject": {
                "JobType": ".OrchestrationJob",
                "id": 194570,
                "revision": 123,
                "created": 1716972270752,
                "timestamp": 1716972270752,
                "components": {
                    "194571": {
                        "id": 194571,
                        "inputCardinality": "ZERO",
                        "outputCardinality": "MANY",
                        "connectorHint": "UNCONDITIONAL",
                        "executionHint": "FLOW",
                        "implementationID": 444132438,
                        "x": -464,
                        "y": 0,
                        "width": 32,
                        "height": 32,
                        "inputConnectorIDs": [],
                        "outputSuccessConnectorIDs": [],
                        "outputFailureConnectorIDs": [],
                        "outputUnconditionalConnectorIDs": [
                            197628
                        ],
                        "outputTrueConnectorIDs": [],
                        "outputFalseConnectorIDs": [],
                        "exportMappings": {},
                        "parameters": {
                            "1": {
                                "slot": 1,
                                "name": "Start",
                                "elements": {
                                    "1": {
                                        "slot": 1,
                                        "values": {
                                            "1": {
                                                "slot": 1,
                                                "type": "STRING",
                                                "value": "Start 0"
                                            }
                                        }
                                    }
                                },
                                "visible": true
                            }
                        },
                        "activationStatus": "ENABLED",
                        "outputIterationConnectorIDs": [],
                        "inputIterationConnectorIDs": []
                    },
                    "197629": {
                        "id": 197629,
                        "inputCardinality": "ONE",
                        "outputCardinality": "MANY",
                        "connectorHint": "SUCCESS_FAIL",
                        "executionHint": "TRANSFORM",
                        "implementationID": 1896325668,
                        "x": -384,
                        "y": 0,
                        "width": 32,
                        "height": 32,
                        "inputConnectorIDs": [
                            197628
                        ],
                        "outputSuccessConnectorIDs": [],
                        "outputFailureConnectorIDs": [],
                        "outputUnconditionalConnectorIDs": [
                            215829
                        ],
                        "outputTrueConnectorIDs": [],
                        "outputFalseConnectorIDs": [],
                        "exportMappings": {},
                        "parameters": {
                            "1": {
                                "slot": 1,
                                "name": "Name",
                                "elements": {
                                    "1": {
                                        "slot": 1,
                                        "values": {
                                            "1": {
                                                "slot": 1,
                                                "type": "STRING",
                                                "value": "sqlquery 0"
                                            }
                                        }
                                    }
                                },
                                "visible": true
                            },
                            "2": {
                                "slot": 2,
                                "name": "Transformation Job",
                                "elements": {
                                    "1": {
                                        "slot": 1,
                                        "values": {
                                            "1": {
                                                "slot": 1,
                                                "type": "STRING",
                                                "value": "sqlquery"
                                            }
                                        }
                                    }
                                },
                                "visible": true
                            },
                            "3": {
                                "slot": 3,
                                "name": "",
                                "elements": {},
                                "visible": false
                            },
                            "4": {
                                "slot": 4,
                                "name": "Set Scalar Variables",
                                "elements": {},
                                "visible": true
                            },
                            "5": {
                                "slot": 5,
                                "name": "Set Grid Variables",
                                "elements": {},
                                "visible": true
                            }
                        },
                        "activationStatus": "ENABLED",
                        "outputIterationConnectorIDs": [],
                        "inputIterationConnectorIDs": []
                    },
                    "197700": {
                        "id": 197700,
                        "inputCardinality": "ONE",
                        "outputCardinality": "MANY",
                        "connectorHint": "SUCCESS_FAIL",
                        "executionHint": "EXECUTE",
                        "implementationID": -1773186829,
                        "x": -176,
                        "y": 0,
                        "width": 32,
                        "height": 32,
                        "inputConnectorIDs": [
                            215834
                        ],
                        "outputSuccessConnectorIDs": [],
                        "outputFailureConnectorIDs": [],
                        "outputUnconditionalConnectorIDs": [],
                        "outputTrueConnectorIDs": [],
                        "outputFalseConnectorIDs": [],
                        "exportMappings": {},
                        "parameters": {
                            "1": {
                                "slot": 1,
                                "name": "Name",
                                "elements": {
                                    "1": {
                                        "slot": 1,
                                        "values": {
                                            "1": {
                                                "slot": 1,
                                                "type": "STRING",
                                                "value": "Python Script 0"
                                            }
                                        }
                                    }
                                },
                                "visible": true
                            },
                            "2": {
                                "slot": 2,
                                "name": "Script",
                                "elements": {
                                    "1": {
                                        "slot": 1,
                                        "values": {
                                            "1": {
                                                "slot": 1,
                                                "type": "STRING",
                                                "value": "###\n# Variables are directly accessible: \n#   print (myvar)\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print (context.getGridVariable('mygridvar'))\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\nimport os\nimport shutil\nimport subprocess\n\n# Define the repository URL and the local path to clone the repository\nrepo_url = 'https://github.com/jordi-1-pons/bddmatilliontest.git'\nlocal_repo_path = '/tmp/bddmatilliontest'\n\n# Delete the local repository folder if it exists\nif os.path.exists(local_repo_path):\n    shutil.rmtree(local_repo_path)\n\n# Clone the GitHub repository\nsubprocess.run(['git', 'clone', repo_url, local_repo_path], check=True)\n\n# Change to the directory where the tests are\nos.chdir(local_repo_path)\n\n# Create a new virtual environment\nvenv_path = os.path.join(local_repo_path, 'venv')\nsubprocess.run(['python3', '-m', 'venv', venv_path], check=True)\n\n# Define the activation script based on the operating system\nif os.name == 'nt':\n    activate_script = os.path.join(venv_path, 'Scripts', 'activate.bat')\nelse:\n    activate_script = os.path.join(venv_path, 'bin', 'activate')\n\n# Ensure the activate script has the right permissions\nif os.name != 'nt':\n    subprocess.run(['chmod', '+x', activate_script], check=True)\n\n# Function to check if dependencies are already installed\ndef check_dependencies():\n    try:\n        result = subprocess.run([os.path.join(venv_path, 'bin', 'pip'), 'show', 'behave'], check=True, stdout=subprocess.PIPE)\n        if \"Name: behave\" in result.stdout.decode():\n            print(\"Behave is already installed.\")\n            return True\n    except subprocess.CalledProcessError:\n        return False\n\n# Install dependencies if not already installed\nif not check_dependencies():\n    print(\"Installing dependencies...\")\n    subprocess.run([os.path.join(venv_path, 'bin', 'pip'), 'install', '--upgrade', 'pip'], check=True)\n    subprocess.run([os.path.join(venv_path, 'bin', 'pip'), 'install', 'behave'], check=True)\n\n# Activate the virtual environment and run the Behave tests in one shell command\nif os.name == 'nt':\n    commands = f\"\"\"cd {local_repo_path} && call {activate_script} && behave\"\"\"\nelse:\n    commands = f\"\"\"cd {local_repo_path} && source {activate_script} && behave\"\"\"\n\n# Execute the commands\nprocess = subprocess.Popen(['/bin/bash', '-c', commands], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\noutput, error = process.communicate()\n\n# Check if the Behave tests were executed successfully\nif process.returncode == 0:\n    print(\"Behave tests executed successfully.\")\nelse:\n    print(\"Error executing Behave tests.\")\n\n# Print the output and error\nprint(\"Output from behave test:\")\nprint(output.decode())\nprint(\"Error from behave test (if any):\")\nprint(error.decode())"
                                            }
                                        }
                                    }
                                },
                                "visible": true
                            },
                            "3": {
                                "slot": 3,
                                "name": "Interpreter",
                                "elements": {
                                    "1": {
                                        "slot": 1,
                                        "values": {
                                            "1": {
                                                "slot": 1,
                                                "type": "STRING",
                                                "value": "Python 3"
                                            }
                                        }
                                    }
                                },
                                "visible": true
                            },
                            "4": {
                                "slot": 4,
                                "name": "Timeout",
                                "elements": {
                                    "1": {
                                        "slot": 1,
                                        "values": {
                                            "1": {
                                                "slot": 1,
                                                "type": "INTEGER",
                                                "value": "360"
                                            }
                                        }
                                    }
                                },
                                "visible": true
                            },
                            "5": {
                                "slot": 5,
                                "name": "User",
                                "elements": {
                                    "1": {
                                        "slot": 1,
                                        "values": {
                                            "1": {
                                                "slot": 1,
                                                "type": "STRING",
                                                "value": "Restricted"
                                            }
                                        }
                                    }
                                },
                                "visible": false
                            }
                        },
                        "activationStatus": "ENABLED",
                        "outputIterationConnectorIDs": [],
                        "inputIterationConnectorIDs": []
                    },
                    "206797": {
                        "id": 206797,
                        "inputCardinality": "ONE",
                        "outputCardinality": "MANY",
                        "connectorHint": "SUCCESS_FAIL",
                        "executionHint": "EXECUTE",
                        "implementationID": -1773186829,
                        "x": -288,
                        "y": 0,
                        "width": 32,
                        "height": 32,
                        "inputConnectorIDs": [
                            215829
                        ],
                        "outputSuccessConnectorIDs": [],
                        "outputFailureConnectorIDs": [],
                        "outputUnconditionalConnectorIDs": [
                            215834
                        ],
                        "outputTrueConnectorIDs": [],
                        "outputFalseConnectorIDs": [],
                        "exportMappings": {},
                        "parameters": {
                            "1": {
                                "slot": 1,
                                "name": "Name",
                                "elements": {
                                    "1": {
                                        "slot": 1,
                                        "values": {
                                            "1": {
                                                "slot": 1,
                                                "type": "STRING",
                                                "value": "Python Script 1"
                                            }
                                        }
                                    }
                                },
                                "visible": true
                            },
                            "2": {
                                "slot": 2,
                                "name": "Script",
                                "elements": {
                                    "1": {
                                        "slot": 1,
                                        "values": {
                                            "1": {
                                                "slot": 1,
                                                "type": "STRING",
                                                "value": "###\n# Variables are directly accessible: \n#   print (myvar)\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print (context.getGridVariable('mygridvar'))\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n# Import necessary modules\nimport os\nimport json\nimport shutil\n\n# Function to fetch column names and table name\ndef fetch_table_data():\n    cursor = context.cursor()\n    table_name = \"fact_test\"\n\n    # Query to fetch column names\n    query = \"SELECT column_name FROM information_schema.columns WHERE table_name = '{}'\".format(table_name)\n    cursor.execute(query)\n    result = cursor.fetchall()\n    column_names = [row[0] for row in result]\n\n    return table_name, column_names\n\n# Fetch table data\ntable_name, column_names = fetch_table_data()\n\n# Define the directory path\ndirectory_path = '/tmp/table_data'\n\n# Delete the directory if it exists\nif os.path.exists(directory_path):\n    shutil.rmtree(directory_path)\n\n# Create the directory\nos.makedirs(directory_path)\n\n# Write table name and column names to a file\nfile_path = os.path.join(directory_path, 'table_data.txt')\nwith open(file_path, 'w') as file:\n    data = {\n        \"table_name\": table_name,\n        \"column_names\": column_names\n    }\n    json.dump(data, file)\n\nprint(\"Table data has been written to /tmp/table_data/table_data.txt\")"
                                            }
                                        }
                                    }
                                },
                                "visible": true
                            },
                            "3": {
                                "slot": 3,
                                "name": "Interpreter",
                                "elements": {
                                    "1": {
                                        "slot": 1,
                                        "values": {
                                            "1": {
                                                "slot": 1,
                                                "type": "STRING",
                                                "value": "Jython"
                                            }
                                        }
                                    }
                                },
                                "visible": true
                            },
                            "4": {
                                "slot": 4,
                                "name": "Timeout",
                                "elements": {
                                    "1": {
                                        "slot": 1,
                                        "values": {
                                            "1": {
                                                "slot": 1,
                                                "type": "INTEGER",
                                                "value": "360"
                                            }
                                        }
                                    }
                                },
                                "visible": false
                            },
                            "5": {
                                "slot": 5,
                                "name": "User",
                                "elements": {
                                    "1": {
                                        "slot": 1,
                                        "values": {
                                            "1": {
                                                "slot": 1,
                                                "type": "STRING",
                                                "value": "Restricted"
                                            }
                                        }
                                    }
                                },
                                "visible": false
                            }
                        },
                        "activationStatus": "ENABLED",
                        "outputIterationConnectorIDs": [],
                        "inputIterationConnectorIDs": []
                    }
                },
                "successConnectors": {},
                "failureConnectors": {},
                "unconditionalConnectors": {
                    "197628": {
                        "id": 197628,
                        "sourceID": 194571,
                        "targetID": 197629
                    },
                    "215829": {
                        "id": 215829,
                        "sourceID": 197629,
                        "targetID": 206797
                    },
                    "215834": {
                        "id": 215834,
                        "sourceID": 206797,
                        "targetID": 197700
                    }
                },
                "trueConnectors": {},
                "falseConnectors": {},
                "iterationConnectors": {},
                "noteConnectors": {},
                "canUndo": true,
                "undoCommand": "Set Parameter",
                "undoCreated": 1716970590849,
                "canRedo": false,
                "redoCommand": "",
                "redoCreated": -1,
                "notes": {},
                "variables": {},
                "grids": {}
            },
            "info": {
                "id": 194570,
                "name": "bdd_TableCreation",
                "description": "",
                "type": "ORCHESTRATION",
                "tag": "a0815829-731c-4b2f-bfbb-40ce85fad064"
            },
            "path": [
                "pipelines"
            ]
        }
    ],
    "version": "1.67.7",
    "environment": "snowflake"
}